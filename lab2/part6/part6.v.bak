module part6(HEX1, HEX0, SW);
input [5:0] SW;
output [0:6] HEX1, HEX0;
wire OUT1, OUT2;
part6_convert convert(OUT2, OUT1, SW);
seg71 seg1(HEX0, OUT1);
seg72 seg2(HEX1, OUT2);
endmodule

module part6_convert(OUT2, OUT1, SW);
input [5:0] SW;
integer Z, OUT1, OUT2;
always @(SW)
begin
Z=SW;
if(Z<9)
begin
OUT1 = Z;
OUT2 = 0;
end
else
begin
OUT2 = SW>>4;
OUT1 = SW[3:0];
end
end
endmodule

module seg71(HEX0, SW);
input [3:0] SW;
output [0:6] HEX0;
assign HEX0 = (SW==4'b0000)? 7'b000_0001:
				  (SW==4'b0001)? 7'b100_1111:
				  (SW==4'b0010)? 7'b001_0010:
				  (SW==4'b0011)? 7'b000_0110:
				  (SW==4'b0100)? 7'b100_1100:
				  (SW==4'b0101)? 7'b010_0100:
				  (SW==4'b0110)? 7'b010_0000:
				  (SW==4'b0111)? 7'b000_1111:
				  (SW==4'b1000)? 7'b000_0000:
				  (SW==4'b1001)? 7'b000_1100: 7'b111_111;
endmodule

module seg72(HEX1, SW);
input  SW;
output [0:6] HEX1;
assign HEX1 = (SW==1'b0)? 7'b000_0001:
				  (SW==1'b1)? 7'b100_1111:7'b111_111;
endmodule	
